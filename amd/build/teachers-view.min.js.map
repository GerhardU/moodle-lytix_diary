{"version":3,"file":"teachers-view.min.js","sources":["../src/teachers-view.js"],"sourcesContent":["import Widget from 'lytix_helper/widget';\nimport Templates from 'core/templates';\n\nconst WIDGET_ID = 'diary';\n\nexport const init = (contextid, userid, courseid, locale) => {\n\n    const wsData = Widget.getData(\n        'local_lytix_lytix_diary_history',\n        {contextid: contextid, courseid: courseid}\n    );\n    locale = Widget.convertLocale(locale);\n    Promise.resolve(wsData).then(data => {\n        const\n            counts = data.Counts,\n            length = counts.length,\n            context = {\n                bars: Array(length),\n                counts: Array(length),\n                months: Array(length),\n            };\n\n        let highestCount = 0;\n        for (let i = 0; i < length; ++i) {\n            const currentCount = context.counts[i] = counts[i];\n            if (currentCount > highestCount) {\n                highestCount = currentCount;\n            }\n        }\n\n        let monthIndex = data.Start - 1;\n        const\n            month = new Date(2022, monthIndex), // Arbitrary year, we only need the month name.\n            format = (new Intl.DateTimeFormat(locale, {month: 'short'})).format;\n        for (let i = length - 1; i >= 0; --i) {\n            context.bars[i] = counts[i] / highestCount * 100;\n            context.months[i] = format(month);\n            month.setMonth(++monthIndex % 12);\n        }\n        context.months.shift(); // Remove first entry because it is replaced by ‘today’ in the template.\n\n        return Templates.render('lytix_diary/teachers-view', context);\n    })\n    .then(html => {\n        const container = Widget.getContentContainer(WIDGET_ID);\n        container.insertAdjacentHTML('beforeend', html);\n        return;\n    })\n    .finally(() => {\n        document.getElementById(WIDGET_ID).classList.remove('loading');\n    })\n    .catch(error => {\n        Widget.handleError(error, WIDGET_ID);\n    });\n};\n"],"names":["contextid","userid","courseid","locale","wsData","Widget","getData","convertLocale","Promise","resolve","then","data","counts","Counts","length","context","bars","Array","months","highestCount","i","currentCount","monthIndex","Start","month","Date","format","Intl","DateTimeFormat","setMonth","shift","Templates","render","html","getContentContainer","insertAdjacentHTML","finally","document","getElementById","classList","remove","catch","error","handleError"],"mappings":"gYAKoB,SAACA,UAAWC,OAAQC,SAAUC,YAExCC,OAASC,gBAAOC,QAClB,kCACA,CAACN,UAAWA,UAAWE,SAAUA,WAErCC,OAASE,gBAAOE,cAAcJ,QAC9BK,QAAQC,QAAQL,QAAQM,MAAK,SAAAC,cAErBC,OAASD,KAAKE,OACdC,OAASF,OAAOE,OAChBC,QAAU,CACNC,KAAMC,MAAMH,QACZF,OAAQK,MAAMH,QACdI,OAAQD,MAAMH,SAGlBK,aAAe,EACVC,EAAI,EAAGA,EAAIN,SAAUM,EAAG,KACvBC,aAAeN,QAAQH,OAAOQ,GAAKR,OAAOQ,GAC5CC,aAAeF,eACfA,aAAeE,sBAInBC,WAAaX,KAAKY,MAAQ,EAE1BC,MAAQ,IAAIC,KAAK,KAAMH,YACvBI,OAAU,IAAIC,KAAKC,eAAezB,OAAQ,CAACqB,MAAO,UAAWE,OACxDN,GAAIN,OAAS,EAAGM,IAAK,IAAKA,GAC/BL,QAAQC,KAAKI,IAAKR,OAAOQ,IAAKD,aAAe,IAC7CJ,QAAQG,OAAOE,IAAKM,OAAOF,OAC3BA,MAAMK,WAAWP,WAAa,WAElCP,QAAQG,OAAOY,QAERC,mBAAUC,OAAO,4BAA6BjB,YAExDL,MAAK,SAAAuB,MACgB5B,gBAAO6B,oBAzCf,SA0CAC,mBAAmB,YAAaF,SAG7CG,SAAQ,WACLC,SAASC,eA9CC,SA8CyBC,UAAUC,OAAO,cAEvDC,OAAM,SAAAC,uBACIC,YAAYD,MAjDT"}